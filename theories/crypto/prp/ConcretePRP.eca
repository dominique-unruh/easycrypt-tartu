(* --------------------------------------------------------------------
 * Copyright (c) - 2012--2016 - IMDEA Software Institute
 * Copyright (c) - 2012--2016 - Inria
 *
 * Distributed under the terms of the CeCILL-B-V1 license
 * -------------------------------------------------------------------- *)

require export Fun Distr.
require (*--*) NewPRP.

clone include NewPRP.

op P : K -> D -> D.
op Pi: K -> D -> D.

axiom PK k:
  support dK k =>
     cancel (P k) (Pi k)
  /\ cancel (Pi k) (P k).

module PRPr = {
  proc kgen(): K = {
    var k;

    k <$ dK;
    return k;
  }

  proc f(k:K, x:D) : D = { return P k x; }

  proc fi(k:K, x:D): D = { return Pi k x; }
}.

module PRPr_Wrapped = {
  var k:K
  proc init(): unit = { k = $dK; }
  proc f(x:D): D = { return P k x; }
  proc fi(x:D): D = { return Pi k x; }
}.
